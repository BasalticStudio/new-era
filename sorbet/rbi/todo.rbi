# This file is autogenerated. Do not edit it by hand. Regenerate it with:
#   srb rbi todo

# typed: strong
module ::Shoulda::Matchers; end
module ::SimpleCov; end
module ::SimpleCov::Formatter::CoberturaFormatter; end
module AbstractController::AssetPaths; end
module AbstractController::Caching; end
module AbstractController::Caching::ClassMethods; end
module AbstractController::Caching::ConfigMethods; end
module AbstractController::Caching::Fragments; end
module AbstractController::Caching::Fragments::ClassMethods; end
module AbstractController::Collector; end
module AbstractController::Logger; end
module AbstractController::Translation; end
module ActionController::ActionControllerError; end
module ActionController::Base::HelperMethods; end
module ActionController::Live::ClassMethods; end
module ActionController::MimeResponds::Collector; end
module ActionController::TemplateAssertions; end
module ActionDispatch::Assertions::RoutingAssertions; end
module ActionDispatch::Cookies::ChainedCookieJars; end
module ActionDispatch::Flash::FlashHash; end
module ActionDispatch::Flash::RequestMethods; end
module ActionDispatch::Integration::RequestHelpers; end
module ActionDispatch::RemoteIp::GetIp; end
module ActionDispatch::Request::Session; end
module ActionDispatch::Response::ContentTypeHeader; end
module ActionDispatch::Routing::PolymorphicRoutes; end
module ActionDispatch::Routing::UrlFor; end
module ActionDispatch::TestProcess; end
module ActionDispatch::TestProcess::FixtureFile; end
module ActionMailer::Base::HelperMethods::Anonymous_Module_7; end
module ActiveRecord::AssociationRelation; end
module ActiveRecord::Associations::CollectionProxy; end
module ActiveRecord::AttributeMethods::BeforeTypeCast; end
module ActiveRecord::AttributeMethods::Query; end
module ActiveRecord::Calculations; end
module ActiveRecord::ConnectionAdapters::Column; end
module ActiveRecord::ConnectionAdapters::ColumnDefinition; end
module ActiveRecord::ConnectionAdapters::DatabaseStatements; end
module ActiveRecord::ConnectionAdapters::PostgreSQL::Column; end
module ActiveRecord::ConnectionAdapters::SchemaStatements; end
module ActiveRecord::Delegation::DelegateCache; end
module ActiveRecord::DisableJoinsAssociationRelation; end
module ActiveRecord::Migration::JoinTable; end
module ActiveRecord::Reflection::MacroReflection; end
module ActiveRecord::Scoping::Default; end
module ActiveRecord::SpawnMethods; end
module ActiveRecord::TestDatabases; end
module ActiveRecord::TestFixtures; end
module ActiveRecord::TestFixtures::ClassMethods; end
module Arel::Attributes::Attribute; end
module Cucumber::Rails::Database; end
module Mail::CheckDeliveryParams; end
module Mail::Ruby19; end
module Mime::AllType; end
module Mime::Mimes; end
module PG::TextDecoder::TimestampLocal; end
module PG::TypeMap::DefaultTypeMappable; end
module Rack::MiniProfilerRails; end
module Rack::QueryParser::InvalidParameterError; end
module Rack::QueryParser::ParameterTypeError; end
module Rack::QueryParser::Params; end
module T::InterfaceWrapper::Helpers; end
module T::Private::Abstract::Hooks; end
module T::Private::Methods::MethodHooks; end
module T::Private::Methods::SingletonMethodHooks; end
module Zip::CompressionMethodError; end
module Zip::DestinationFileExistsError; end
module Zip::EntryExistsError; end
module Zip::EntryNameError; end
module Zip::Error; end
module Zip::InternalError; end
