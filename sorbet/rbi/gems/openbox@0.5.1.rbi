# typed: true

# DO NOT EDIT MANUALLY
# This is an autogenerated file for types exported from the `openbox` gem.
# Please instead update this file by running `bin/tapioca gem openbox`.

# The tool to build Ruby container easier
#
# @since 0.1.0
module Openbox
  private

  # @return [Openbox::Database]
  # @since 0.1.0
  def database; end

  # @return [Openbox::Runtime]
  # @since 0.1.0
  def runtime; end

  class << self
    # @return [Openbox::Database]
    # @since 0.1.0
    def database; end

    # @return [Openbox::Runtime]
    # @since 0.1.0
    def runtime; end
  end
end

# The base command of openbox
#
# @since 0.1.0
class Openbox::Command < ::Thor::Group
  # Before execute command
  #
  # @since 0.5.0
  def before_execute; end

  # Execute command
  #
  # @raise [NotImplementedError]
  # @since 0.1.0
  def execute; end
end

module Openbox::Commands; end

# The Console Command
#
# @since 0.1.0
class Openbox::Commands::Console < ::Openbox::Command
  # Run rails console
  #
  # @since 0.1.0
  def execute; end
end

# The Migrate Command
#
# @since 0.1.0
class Openbox::Commands::Migrate < ::Openbox::Command
  # Run rails migrate
  #
  # @since 0.1.0
  def execute; end
end

# The Rake Command
#
# @since 0.1.0
class Openbox::Commands::Rake < ::Openbox::Command
  # Run rake task with database connection check
  #
  # @since 0.1.0
  def execute; end
end

# The Seed Command
#
# @since 0.1.0
class Openbox::Commands::Seed < ::Openbox::Command
  # Run rails seed
  #
  # @since 0.1.0
  def execute; end
end

# The Server Command
#
# @since 0.1.0
class Openbox::Commands::Server < ::Openbox::Command
  # Run Application Server
  #
  # @since 0.1.0
  def execute; end
end

# The Sidekiq Command
#
# @since 0.1.0
class Openbox::Commands::Sidekiq < ::Openbox::Command
  # Run sidekiq
  #
  # @since 0.1.0
  def execute; end
end

# The database helper
#
# @since 0.1.0
class Openbox::Database
  # Get all database adapters
  #
  # @return [Array<String>] adapters
  # @since 0.1.0
  def adapters; end

  # Ensure database connection
  #
  # @since 0.1.0
  # @since 0.1.0
  def ensure_connection!; end

  private

  # @since 0.1.0
  def connect_mysql2; end

  # @since 0.1.0
  def connect_pg; end

  # @since 0.1.0
  def retry_in(timeout: T.unsafe(nil)); end
end

# Supported adpaters
#
# @since 0.1.0
Openbox::Database::ADAPTERS = T.let(T.unsafe(nil), Array)

# The Container Entrypoint
#
# @since 0.1.0
class Openbox::Entrypoint < ::Thor
  def console(*args); end
  def migrate(*args); end
  def rake(*args); end
  def seed(*args); end
  def server(*args); end

  class << self
    # @return [Boolean]
    # @since 0.1.0
    def exit_on_failure?; end
  end
end

# @since 0.1.0
Openbox::LOCK = T.let(T.unsafe(nil), Thread::Mutex)

# Detection application runtime
#
# @since 0.1.0
class Openbox::Runtime
  # @param dependencies [Array<Bundler::Dependency>]
  # @return [Runtime] a new instance of Runtime
  # @since 0.1.0
  def initialize(dependencies = T.unsafe(nil)); end

  # Groups to detect
  #
  # @return [Array<Symbol>]
  # @since 0.1.0
  def groups; end

  # Check for rubygmes exists
  #
  # @return [TrueClass|FalseClass]
  # @since 0.1.0
  def has?(*names); end

  # Check for Rails environment
  #
  # @return [TrueClass|FalseClass]
  # @since 0.1.0
  def rails?; end

  # Select desired rubygems
  #
  # @return [Array<Bundler::Dependency>]
  # @since 0.1.0
  def select(*names); end
end

Openbox::VERSION = T.let(T.unsafe(nil), String)
