# typed: true

# DO NOT EDIT MANUALLY
# This is an autogenerated file for types exported from the `memoist` gem.
# Please instead update this file by running `bin/tapioca gem memoist`.

module Memoist
  def all_memoized_structs; end
  def clear_structs; end
  def memoize(*method_names); end

  class << self
    def escape_punctuation(string); end

    # @private
    def extended(extender); end

    def extract_reload!(method, args); end
    def memoist_eval(klass, *args, &block); end
    def memoized_ivar_for(method_name, identifier = T.unsafe(nil)); end
    def memoized_prefix(identifier = T.unsafe(nil)); end
    def unmemoized_method_for(method_name, identifier = T.unsafe(nil)); end
    def unmemoized_prefix(identifier = T.unsafe(nil)); end
  end
end

module Memoist::InstanceMethods
  def flush_cache(*method_names); end
  def memoize_all; end
  def memoized_structs(names); end
  def prime_cache(*method_names); end
  def unmemoize_all; end
end

class Memoist::MemoizedMethod < ::Struct
  # Returns the value of attribute arity
  #
  # @return [Object] the current value of arity
  def arity; end

  # Sets the attribute arity
  #
  # @param value [Object] the value to set the attribute arity to.
  # @return [Object] the newly set value
  def arity=(_); end

  # Returns the value of attribute ivar
  #
  # @return [Object] the current value of ivar
  def ivar; end

  # Sets the attribute ivar
  #
  # @param value [Object] the value to set the attribute ivar to.
  # @return [Object] the newly set value
  def ivar=(_); end

  # Returns the value of attribute memoized_method
  #
  # @return [Object] the current value of memoized_method
  def memoized_method; end

  # Sets the attribute memoized_method
  #
  # @param value [Object] the value to set the attribute memoized_method to.
  # @return [Object] the newly set value
  def memoized_method=(_); end

  class << self
    def [](*_arg0); end
    def inspect; end
    def members; end
    def new(*_arg0); end
  end
end

Memoist::VERSION = T.let(T.unsafe(nil), String)
