# typed: true

# DO NOT EDIT MANUALLY
# This is an autogenerated file for types exported from the `bankai` gem.
# Please instead update this file by running `bin/tapioca gem bankai`.

module Bankai; end

class Bankai::Builder < ::Rails::AppBuilder
  def clear_seed_file; end
  def configure_generators; end
  def configure_puma_dev; end
  def configure_quiet_assets; end
  def copy_dotfiles; end
  def gemfile; end
  def gitignore; end
  def readme; end
  def replace_gemfile(path); end
  def setup_default_directories; end
  def setup_rack_mini_profiler; end
end

Bankai::CAPISTRANO_VERSION = T.let(T.unsafe(nil), String)

class Bankai::Generator < ::Rails::Generators::AppGenerator
  def configure_app; end
  def customization; end
  def customize_gemfile; end

  # @return [Boolean]
  def depends_on_system_test?; end

  def finish_template; end
  def generate_default; end
  def setup_default_directories; end
  def setup_development_environment; end
  def setup_dotfiles; end

  protected

  def get_builder_class; end

  class << self
    def banner; end
  end
end

module Bankai::Generators; end

class Bankai::Generators::Base < ::Rails::Generators::Base
  include ::Bankai::Helper

  private

  def app_name; end

  class << self
    def default_source_root; end
  end
end

class Bankai::Generators::CiGenerator < ::Bankai::Generators::Base
  def configure_ci; end
end

class Bankai::Generators::DbOptimizationsGenerator < ::Bankai::Generators::Base
  def configure_bullet; end

  private

  def configuration; end
end

class Bankai::Generators::DeployGenerator < ::Bankai::Generators::Base
  def configure_capfile; end
  def install_capistrano; end
  def replace_deploy_config; end

  protected

  def repo_url; end

  private

  def capistrano_plugins; end
end

Bankai::Generators::DeployGenerator::DEFAULT_REPO = T.let(T.unsafe(nil), String)
Bankai::Generators::HOST_TEMPLATE = T.let(T.unsafe(nil), String)

class Bankai::Generators::JsonGenerator < ::Bankai::Generators::Base
  def add_oj; end
end

class Bankai::Generators::LintGenerator < ::Bankai::Generators::Base
  def configure_overcommit; end
  def configure_rubocop; end
  def install_overcommit; end
  def rubocop_autocorrect; end
  def rubocop_todo; end
end

class Bankai::Generators::MailerGenerator < ::Bankai::Generators::Base
  def configure_letter_opener; end

  private

  def configuration; end
end

class Bankai::Generators::SitemapGenerator < ::Bankai::Generators::Base
  def add_sitemap_generator; end
  def generate_sitmap_config; end
  def init_sitemap; end
end

class Bankai::Generators::TestingGenerator < ::Bankai::Generators::Base
  def configure_rspec; end
  def generate_rspec; end
  def provide_database_rewinder_config; end
  def provide_shoulda_matchers_config; end
end

class Bankai::Generators::WheneverGenerator < ::Bankai::Generators::Base
  def add_whenever; end
  def initialize_capistrano; end
  def initialize_whenever; end
end

module Bankai::Helper
  protected

  # @return [Boolean]
  def capistrano?; end

  # @return [Boolean]
  def mysql?; end

  # @return [Boolean]
  def pg?; end

  private

  def gemfile; end
end

Bankai::RAILS_VERSION = T.let(T.unsafe(nil), String)
Bankai::RUBOCOP_VERSION = T.let(T.unsafe(nil), String)
Bankai::RUBY_VERSION = T.let(T.unsafe(nil), String)
Bankai::VERSION = T.let(T.unsafe(nil), String)
