# This file is autogenerated. Do not edit it by hand. Regenerate it with:
#   srb rbi gems

# typed: strict
#
# If you would like to make changes to this file, great! Please create the gem's shim here:
#
#   https://github.com/sorbet/sorbet-typed/new/master?filename=lib/uniform_notifier/all/uniform_notifier.rbi
#
# uniform_notifier-1.16.0

class UniformNotifier
  def self.active_notifiers; end
  def self.airbrake; end
  def self.airbrake=(arg0); end
  def self.alert; end
  def self.alert=(arg0); end
  def self.appsignal; end
  def self.appsignal=(arg0); end
  def self.bugsnag; end
  def self.bugsnag=(arg0); end
  def self.console; end
  def self.console=(arg0); end
  def self.customized_logger; end
  def self.customized_logger=(logdev); end
  def self.honeybadger; end
  def self.honeybadger=(arg0); end
  def self.rails_logger; end
  def self.rails_logger=(arg0); end
  def self.raise; end
  def self.raise=(exception_class); end
  def self.rollbar; end
  def self.rollbar=(arg0); end
  def self.sentry; end
  def self.sentry=(arg0); end
  def self.slack; end
  def self.slack=(slack); end
  def self.terminal_notifier; end
  def self.terminal_notifier=(arg0); end
  def self.xmpp; end
  def self.xmpp=(xmpp); end
end
class UniformNotifier::Base
  def self._inline_notify(data); end
  def self._out_of_channel_notify(data); end
  def self.active?; end
  def self.inline_notify(data); end
  def self.out_of_channel_notify(data); end
  def self.wrap_js_association(code, attributes = nil); end
end
class UniformNotifier::Exception < RuntimeError
end
class UniformNotifier::JavascriptAlert < UniformNotifier::Base
  def self._inline_notify(data); end
  def self.active?; end
end
class UniformNotifier::JavascriptConsole < UniformNotifier::Base
  def self._inline_notify(data); end
  def self.active?; end
end
class UniformNotifier::HoneybadgerNotifier < UniformNotifier::Base
  def self._out_of_channel_notify(data); end
  def self.active?; end
end
class UniformNotifier::Xmpp < UniformNotifier::Base
  def self._out_of_channel_notify(data); end
  def self.active?; end
  def self.connect; end
  def self.notify(message); end
  def self.presence_status; end
  def self.setup_connection(xmpp_information); end
end
class UniformNotifier::RailsLogger < UniformNotifier::Base
  def self._out_of_channel_notify(data); end
  def self.active?; end
end
class UniformNotifier::CustomizedLogger < UniformNotifier::Base
  def self._out_of_channel_notify(data); end
  def self.active?; end
  def self.setup(logdev); end
end
class UniformNotifier::AirbrakeNotifier < UniformNotifier::Base
  def self._out_of_channel_notify(data); end
  def self.active?; end
end
class UniformNotifier::SentryNotifier < UniformNotifier::Base
  def self._out_of_channel_notify(data); end
  def self.active?; end
end
class UniformNotifier::RollbarNotifier < UniformNotifier::Base
  def self._out_of_channel_notify(data); end
  def self.active?; end
end
class UniformNotifier::BugsnagNotifier < UniformNotifier::Base
  def self._out_of_channel_notify(data); end
  def self.active?; end
end
class UniformNotifier::AppsignalNotifier < UniformNotifier::Base
  def self._out_of_channel_notify(data); end
  def self.active?; end
end
class UniformNotifier::Slack < UniformNotifier::Base
  def self._out_of_channel_notify(data); end
  def self.active?; end
  def self.fail_connection(message); end
  def self.notify(message); end
  def self.parse_config(config); end
  def self.setup_connection(config = nil); end
end
class UniformNotifier::Raise < UniformNotifier::Base
  def self._out_of_channel_notify(data); end
  def self.active?; end
  def self.setup_connection(exception_class); end
end
class UniformNotifier::TerminalNotifier < UniformNotifier::Base
  def self._out_of_channel_notify(data); end
  def self.active?; end
end
class UniformNotifier::NotificationError < StandardError
end
