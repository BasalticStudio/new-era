name: Reuse Test Base

on:
  workflow_call:
    inputs:
      ruby-version:
        default: '3.2.2'
        type: string
      upload-coverage:
        default: false
        type: boolean
      node-version:
        default: '16'
        type: string
      command:
        required: true
        type: string

env:
  RAILS_ENV: test
  DATABASE_URL: "postgres://postgres:newera@localhost/postgres"
  REDIS_URL: "redis://localhost:6379"

permissions:
  contents: read

jobs:
  run-test:
    permissions:
      contents: read
    runs-on: ubuntu-latest
    services:
      postgres:
        image: postgres:14-alpine
        env:
          POSTGRES_PASSWORD: newera
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
        ports:
          - 5432:5432
      redis:
        image: redis:7-alpine
        options: >-
          --health-cmd "redis-cli ping"
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
        ports:
          - 6379:6379
    steps:
    - name: Checkout
      uses: actions/checkout@v3

    - name: Setup Ruby
      uses: ruby/setup-ruby@v1
      with:
        ruby-version: ${{ inputs.ruby-version }}
        bundler-cache: true

    - name: Set up Node
      uses: actions/setup-node@v2
      with:
        node-version: ${{ inputs.node-version }}
        cache: 'yarn'

    - name: Install dependencies
      run: |
        bundle install
        yarn install

    - name: Setup Spreadsheet Service Account
      run: echo $SPREADSHEET_SERVICE_ACCOUNT | base64 --decode > config/credentials/spreadsheet-service_account.json
      env:
        SPREADSHEET_SERVICE_ACCOUNT: ${{ secrets.SPREADSHEET_SERVICE_ACCOUNT }}

    - name: Prepare
      run: |
        bundle exec rake test:prepare
        bundle exec rake db:migrate

    - name: Run Test
      if: inputs.upload-coverage == false
      run: ${{ inputs.command }}

    - name: Run Test with CodeClimate
      uses: paambaati/codeclimate-action@v3.0.0
      if: inputs.upload-coverage == true
      env:
        CC_TEST_REPORTER_ID: ${{ secrets.CC_TEST_REPORTER_ID }}
      with:
        coverageCommand: ${{ inputs.command }}
